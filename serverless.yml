service:
  name: Event-Scheduler

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-2
  environment:
    EVENTS_TABLE_NAME: ${self:custom.EventsTable.name}
  iamRoleStatements:
    - ${file(iam/EventsTableIAM.yml):EventsTableIAM}

resources:
  Resources:
    EventsTable: ${file(resources/EventsTable.yml):EventsTable}
  
functions:
  createEvent:
    handler: src/handlers/event/createEvent.handler
    events:
      - http:
          method: POST
          path: /event

  getEvents:
    handler: src/handlers/event/getEvents.handler
    events:
      - http:
          method: GET
          path: /events

  getEvent:
    handler: src/handlers/event/getEvent.handler
    events:
      - http:
          method: GET
          path: /event/{id}

  filterEvent:
    handler: src/handlers/event/filterEvent.handler
    events:
      - http:
          method: GET
          path: /events/filter
          request:
            template:
              application/json: '{ "status" : "$input.params(''status'')" }'

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations
      

  bundle:
    linting: false

  EventsTable:
    name: !Ref EventsTable
    arn: !GetAtt EventsTable.Arn